plugins {
	id 'org.springframework.boot' version '2.1.5.RELEASE'
	id 'io.spring.dependency-management' version '1.0.9.RELEASE'
	id 'java'
}

group = 'com.cloud.config.client'
version = '0.0.1'
sourceCompatibility = '1.8'

repositories {
	mavenCentral()
}

ext {
	set('springBootAdminVersion', "2.1.5")
	set('springCloudVersion', "Greenwich.SR4")
}

dependencies {
	implementation 'de.codecentric:spring-boot-admin-starter-client'
	implementation 'org.springframework.cloud:spring-cloud-config-server'
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
}

dependencyManagement {
	imports {
		mavenBom "de.codecentric:spring-boot-admin-dependencies:${springBootAdminVersion}"
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

import org.gradle.internal.os.OperatingSystem

if (OperatingSystem.current().isWindows()) {
    task pathingJar(type: Jar) {
        dependsOn configurations.runtime
        appendix = 'pathing'

        doFirst {
            manifest {
                // Build the Class-Path for absolute paths based on runtime dependencies.
                attributes "Class-Path": configurations.runtime.files.collect {
                    it.toURL().toString().replaceFirst(/file:\/+/, '/')
                }.join(' ')
            }
        }
    }

    // This gradle task will be called by `grails run-app`.
    bootRun {
        dependsOn pathingJar
        doFirst {
            // Add the compiled app classed to the classpath of the pathing jar. Probably there is a gradle variable for them?
            classpath = files("$buildDir/classes/main", "$buildDir/resources/main", "$projectDir/gsp-classes", pathingJar.archivePath)
        }
    }
} else {
    bootRun {
        systemProperties = System.properties
}

test {
	useJUnitPlatform()
}
